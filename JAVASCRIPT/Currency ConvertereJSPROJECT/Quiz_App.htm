<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>QuizMaster Pro</title>
    <!-- Bootstrap 5 CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Font Awesome -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <style>
      body {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        min-height: 100vh;
        padding: 20px;
      }
      .quiz-card {
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        overflow: hidden;
        border: none;
      }
      .header-bg {
        background: linear-gradient(to right, #4e54c8, #8f94fb);
        padding: 25px 0;
      }
      .option-card {
        transition: all 0.3s ease;
        cursor: pointer;
        border: 2px solid transparent;
      }
      .option-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        border-color: #4e54c8;
      }
      .option-card.correct {
        background-color: #d4edda !important;
        border-color: #28a745 !important;
      }
      .option-card.incorrect {
        background-color: #f8d7da !important;
        border-color: #dc3545 !important;
      }
      .progress-bar {
        transition: width 0.6s ease;
      }
      .result-icon {
        font-size: 5rem;
        margin-bottom: 20px;
      }
    </style>
  </head>
  <body>
    <div class="container py-4">
      <div class="row justify-content-center">
        <div class="col-lg-8">
          <!-- Quiz Card -->
          <div class="card quiz-card">
            <!-- Header -->
            <div class="header-bg text-white text-center">
              <h1 class="display-4 fw-bold">
                <i class="fa-solid fa-puzzle-piece me-3"></i>QuizMaster Pro
              </h1>
              <p class="lead">Test your knowledge with our interactive quiz</p>
            </div>

            <div class="card-body p-4">
              <!-- Progress Section -->
              <div
                class="d-flex justify-content-between align-items-center mb-4"
              >
                <div>
                  <span id="progress-text" class="fw-bold text-muted"
                    >Question 1 of 5</span
                  >
                </div>
                <div>
                  <span id="score" class="badge bg-primary fs-5 p-2"
                    >Score: 0</span
                  >
                </div>
              </div>

              <!-- Progress Bar -->
              <div class="progress mb-4" style="height: 15px">
                <div
                  id="progress-bar"
                  class="progress-bar progress-bar-striped progress-bar-animated"
                  role="progressbar"
                  style="width: 20%"
                ></div>
              </div>

              <!-- Question Container -->
              <div id="question-container">
                <h2 id="question" class="fw-bold mb-4 text-center">
                  Loading question...
                </h2>

                <!-- Options Grid -->
                <div id="options" class="row g-3 mb-4">
                  <!-- Options will be injected here -->
                </div>
              </div>

              <!-- Navigation Buttons -->
              <div class="d-flex justify-content-between">
                <button id="prev-btn" class="btn btn-lg btn-secondary">
                  <i class="fas fa-arrow-left me-2"></i>Previous
                </button>
                <button id="next-btn" class="btn btn-lg btn-primary">
                  Next<i class="fas fa-arrow-right ms-2"></i>
                </button>
              </div>
            </div>
          </div>

          <!-- Results Container -->
          <div
            id="results-container"
            class="card quiz-card mt-4 text-center"
            style="display: none"
          >
            <div class="card-body p-5">
              <i class="fas fa-trophy text-warning result-icon"></i>
              <h2 class="display-4 fw-bold mb-3">Quiz Completed!</h2>
              <p id="final-score" class="fs-1 mb-4 text-primary">
                Your Score: <span class="fw-bold">0</span>/5
              </p>
              <div id="performance-comment" class="fs-4 mb-4"></div>
              <button id="restart-btn" class="btn btn-primary btn-lg px-5 py-3">
                <i class="fas fa-redo me-2"></i>Restart Quiz
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      // Quiz questions
      const quizData = [
        {
          question: "Which language runs in a web browser?",
          options: ["Java", "C", "Python", "JavaScript"],
          answer: 3,
        },
        {
          question: "What does CSS stand for?",
          options: [
            "Central Style Sheets",
            "Cascading Style Sheets",
            "Cascading Simple Sheets",
            "Cars SUVs Sailboats",
          ],
          answer: 1,
        },
        {
          question: "What year was JavaScript launched?",
          options: ["1996", "1995", "1994", "1997"],
          answer: 1,
        },
        {
          question: "Which of these is a JavaScript framework?",
          options: ["Django", "Flask", "React", "Laravel"],
          answer: 2,
        },
        {
          question: "What does HTML stand for?",
          options: [
            "Hypertext Markup Language",
            "Hypertext Markdown Language",
            "Hyperloop Machine Language",
            "Helicopters Terminals Motorboats Lamborghinis",
          ],
          answer: 0,
        },
      ];

      // DOM Elements
      const questionContainer = document.getElementById("question-container");
      const resultsContainer = document.getElementById("results-container");
      const questionEl = document.getElementById("question");
      const optionsEl = document.getElementById("options");
      const prevBtn = document.getElementById("prev-btn");
      const nextBtn = document.getElementById("next-btn");
      const restartBtn = document.getElementById("restart-btn");
      const progressText = document.getElementById("progress-text");
      const progressBar = document.getElementById("progress-bar");
      const scoreEl = document.getElementById("score");
      const finalScoreEl = document.getElementById("final-score");
      const performanceComment = document.getElementById("performance-comment");

      // Quiz state
      let currentQuestion = 0;
      let score = 0;
      let selectedOption = null;

      // Initialize quiz
      function loadQuestion() {
        const question = quizData[currentQuestion];
        questionEl.textContent = question.question;

        // Clear previous options
        optionsEl.innerHTML = "";

        // Create new options
        question.options.forEach((option, index) => {
          const col = document.createElement("div");
          col.className = "col-md-6";

          const optionCard = document.createElement("div");
          optionCard.className = "card option-card h-100 p-3";
          optionCard.innerHTML = `
          <div class="d-flex align-items-center">
            <span class="badge bg-primary me-3 fs-5">${index + 1}</span>
            <span class="fs-5">${option}</span>
          </div>
        `;
          optionCard.addEventListener("click", () => selectOption(index));
          col.appendChild(optionCard);
          optionsEl.appendChild(col);
        });

        // Update progress
        progressText.textContent = `Question ${currentQuestion + 1} of ${
          quizData.length
        }`;
        progressBar.style.width = `${
          ((currentQuestion + 1) / quizData.length) * 100
        }%`;
        scoreEl.textContent = `Score: ${score}`;

        // Disable previous button on first question
        prevBtn.disabled = currentQuestion === 0;
      }

      // Handle option selection
      function selectOption(index) {
        // Reset previous selection
        if (selectedOption !== null) {
          const prevOption = optionsEl.children[selectedOption].firstChild;
          prevOption.classList.remove("bg-primary", "text-white");
        }

        // Highlight selected option
        const selected = optionsEl.children[index].firstChild;
        selected.classList.add("bg-primary", "text-white");
        selectedOption = index;
      }

      // Check answer and move to next question
      function nextQuestion() {
        if (selectedOption === null) return;

        // Check answer
        const correctAnswer = quizData[currentQuestion].answer;
        const selectedCard = optionsEl.children[selectedOption].firstChild;

        // Disable all options
        Array.from(optionsEl.children).forEach((col) => {
          col.firstChild.style.pointerEvents = "none";
        });

        // Show correct/incorrect
        if (selectedOption === correctAnswer) {
          selectedCard.classList.add("correct");
          score++;
          scoreEl.textContent = `Score: ${score}`;
        } else {
          selectedCard.classList.add("incorrect");
          // Highlight correct answer
          optionsEl.children[correctAnswer].firstChild.classList.add("correct");
        }

        // Enable next button after delay
        setTimeout(() => {
          currentQuestion++;
          selectedOption = null;

          if (currentQuestion < quizData.length) {
            loadQuestion();
          } else {
            showResults();
          }
        }, 1500);
      }

      // Show results
      function showResults() {
        questionContainer.style.display = "none";
        resultsContainer.style.display = "block";
        finalScoreEl.innerHTML = `Your Score: <span class="fw-bold">${score}</span>/${quizData.length}`;

        // Performance comment
        const percentage = (score / quizData.length) * 100;
        let comment = "";
        if (percentage >= 80) {
          comment = "🎉 Excellent! You really know your stuff!";
        } else if (percentage >= 60) {
          comment = "👍 Good job! You have solid knowledge.";
        } else if (percentage >= 40) {
          comment = "👏 Not bad! Keep learning and improving.";
        } else {
          comment = "💪 Keep practicing! You'll get better.";
        }
        performanceComment.textContent = comment;
      }

      // Restart quiz
      function restartQuiz() {
        currentQuestion = 0;
        score = 0;
        selectedOption = null;
        resultsContainer.style.display = "none";
        questionContainer.style.display = "block";
        loadQuestion();
      }

      // Event listeners
      prevBtn.addEventListener("click", () => {
        if (currentQuestion > 0) {
          currentQuestion--;
          loadQuestion();
        }
      });

      nextBtn.addEventListener("click", nextQuestion);
      restartBtn.addEventListener("click", restartQuiz);

      // Initialize quiz
      loadQuestion();
    </script>
  </body>
</html>
